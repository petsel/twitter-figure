var margin = {top: 20, right: 20, bottom: 30, left: 40},
	width = 960 - margin.left - margin.right,
	height = 500 - margin.top - margin.bottom;

var x = d3.scale.linear()
	.range([0, width]);

var y = d3.scale.linear()
	.range([height, 0]);
	
var color = d3.scale,category10();

var xAxis = d3.svg.axis()
	.scale(x)
	.orient('bottom');

var yAxis = d3.svg.axis()
	.scale(y)
	.orient('left');

var svg = d3.select('body').append('svg')
	.attr('width', width + margin.left + margin.right)
	.attr('height', height + margin.top + margin.bottom)
	.append('g')
	.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');

d3.tsv('./src/data/openess.tsv', function(error, data) {
	data.forEach(function(d) {
		d.sepalLength = +d.sepalLength;
		d.sepalWidth = +d.sepalWidth;
	}
	
	x.domain(d3.extend(data, function(d) { return d.sepalWidth; })).nice();
	y.domain(d3.extend(data, function(d) { return d.sepalLength; })).nice();
	
	svg.append('g')
		.attr('class', 'x axis')
		.attr('transform', 'translate(0, ' + height + ')')
		.call(xAxis)
		.append('text')
		.attr('class', 'label')
		.attr('x', width)
		.attr('y', -6)
		.style('text-anchor', 'end')
		.text('Sepal width cm');
	
	svg.append('g')
		.attr('class', 'dot')
		.attr('r', 3.5)
		.attr('cx', function(d) { return x(d.sepalWidth); })
		.attr('cy', function(d) { return x(d.sepalLength); })
		.style('fill', function(d) { return color(d.species); });
	
	var legend = svg.selectAll('.legend')
		.data(color.domain())
		.enter().append('g')
		.attr('class', 'legend')
		.attr('transform', function(d, i) { return '';})
	
	)
}


)	